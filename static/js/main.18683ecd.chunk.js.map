{"version":3,"sources":["components/Card.js","components/CardList.js","components/searchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","cardComponent","i","length","push","SearchBox","type","placeholder","onChange","searchChange","Scroll","style","overflow","border","height","children","App","onSearchEvent","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","r","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAgBeA,EAbF,SAACC,GACb,OACC,sBAAKC,UAAW,sDAAhB,UACC,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAAMI,GAAhC,eACnB,gCACC,6BAAMJ,EAAMK,OACZ,6BAAML,EAAMM,eCaDC,EAlBE,SAAC,GAGjB,IAH+B,IAAbC,EAAY,EAAZA,OAEZC,EAAgB,GACZC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IACnCD,EAAcG,KACb,cAAC,EAAD,CAEAR,GAAII,EAAOE,GAAGN,GACdC,KAAMG,EAAOE,GAAGL,KAChBC,MAAOE,EAAOE,GAAGJ,OAHZI,IAKP,OACC,8BACED,KCDWI,MAbf,SAAoBb,GACnB,OACC,qBAAKC,UAAU,MAAf,SACC,uBACCA,UAAU,oCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUhB,EAAMiB,kBCCLC,G,MATA,SAAClB,GACf,OACC,qBAAKmB,MAAO,CAACC,SAAU,SAASC,OAAQ,kBAAkBC,OAAQ,SAAlE,SACEtB,EAAMuB,aCwCKC,E,kDAvCd,aAAe,IAAD,8BACb,gBAaDC,cAAgB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAbxC,EAAKC,MAAQ,CACZvB,OAAQ,GACRoB,YAAa,IAJD,E,gEAQO,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACnB,OAAQ4B,S,+BAQ9B,IAAD,OACFC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAQ,SAAAC,GAChD,OAAOA,EAAEnC,KAAKoC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAE7D,OAAiC,IAA7BH,KAAKP,MAAMvB,OAAOG,OACd,yCAGN,sBAAKV,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWgB,aAAgBqB,KAAKb,gBAChC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUjB,OAAQ6B,a,GAhCNM,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IACfC,SAASC,eAAe,SAMzBX,M","file":"static/js/main.18683ecd.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Card = (props) => {\n\treturn (\n\t\t<div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='Robo' src={`https://robohash.org/${props.id}?200x200}`}/>\n\t\t\t<div>\n\t\t\t\t<h2>{ props.name }</h2>\n\t\t\t\t<h3>{ props.email }</h3>\n\t\t\t</div>\t\n\t\t</div>\n\t)\n\n}\n\nexport default Card;","import React from 'react'\nimport Card from  './Card'\n\n\nconst CardList = ({robots}) => {\n\t \n\tconst cardComponent = []\n\tfor ( var i = 0; i < robots.length; i++) {\n\t\tcardComponent.push(\n\t\t\t<Card \n\t\t\tkey={i} \n\t\t\tid={robots[i].id} \n\t\t\tname={robots[i].name} \n\t\t\temail={robots[i].email} />)\n\t}\n\treturn (\n\t\t<div>\n\t\t\t{cardComponent}\n\t\t</div>\n\t\t)\n}\n\nexport default CardList;","import React from 'react';\n\n\nfunction SearchBox (props) {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input\n\t\t\t\tclassName='pa3 ba b--green bg-lightlest-blue' \n\t\t\t\ttype=\"search\" \n\t\t\t\tplaceholder=\"Search Robots\"\n\t\t\t\tonChange={props.searchChange}\n\t\t\t/>\n\t\t</div>\n\t)\t\n}\n\nexport default SearchBox","import React from 'react'\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflow: 'scroll',border: '1px solid black',height: '800px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t\t)\n\n}\n\nexport default Scroll;","import React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/searchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\t\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({robots: users}));\t\n\t} \n\n\tonSearchEvent = (event) => {\n\t\tthis.setState({searchfield:event.target.value})\n\t\t\n\t}\n\n\trender() {\n\t\tconst filteredRobots = this.state.robots.filter( r => {\n\t\t\treturn r.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n\t\t\t})\n\t\tif (this.state.robots.length === 0) {\n\t\t\treturn <h1>Loading</h1>\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'>Robo Friends</h1>\n\t\t\t\t\t<SearchBox searchChange = {this.onSearchEvent}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t}\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}